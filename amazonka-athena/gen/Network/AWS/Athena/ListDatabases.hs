{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Athena.ListDatabases
-- Copyright   : (c) 2013-2018 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Lists the databases in the specified data catalog.
--
--
--
-- This operation returns paginated results.
module Network.AWS.Athena.ListDatabases
    (
    -- * Creating a Request
      listDatabases
    , ListDatabases
    -- * Request Lenses
    , ldNextToken
    , ldMaxResults
    , ldCatalogName

    -- * Destructuring the Response
    , listDatabasesResponse
    , ListDatabasesResponse
    -- * Response Lenses
    , ldrsDatabaseList
    , ldrsNextToken
    , ldrsResponseStatus
    ) where

import Network.AWS.Athena.Types
import Network.AWS.Lens
import Network.AWS.Pager
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'listDatabases' smart constructor.
data ListDatabases = ListDatabases'{_ldNextToken ::
                                    !(Maybe Text),
                                    _ldMaxResults :: !(Maybe Nat),
                                    _ldCatalogName :: !Text}
                       deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'ListDatabases' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'ldNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
--
-- * 'ldMaxResults' - Specifies the maximum number of results to return.
--
-- * 'ldCatalogName' - The name of the data catalog that contains the databases to return.
listDatabases
    :: Text -- ^ 'ldCatalogName'
    -> ListDatabases
listDatabases pCatalogName_
  = ListDatabases'{_ldNextToken = Nothing,
                   _ldMaxResults = Nothing,
                   _ldCatalogName = pCatalogName_}

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the @NextToken@ from the response object of the previous page call.
ldNextToken :: Lens' ListDatabases (Maybe Text)
ldNextToken = lens _ldNextToken (\ s a -> s{_ldNextToken = a})

-- | Specifies the maximum number of results to return.
ldMaxResults :: Lens' ListDatabases (Maybe Natural)
ldMaxResults = lens _ldMaxResults (\ s a -> s{_ldMaxResults = a}) . mapping _Nat

-- | The name of the data catalog that contains the databases to return.
ldCatalogName :: Lens' ListDatabases Text
ldCatalogName = lens _ldCatalogName (\ s a -> s{_ldCatalogName = a})

instance AWSPager ListDatabases where
        page rq rs
          | stop (rs ^. ldrsNextToken) = Nothing
          | stop (rs ^. ldrsDatabaseList) = Nothing
          | otherwise =
            Just $ rq & ldNextToken .~ rs ^. ldrsNextToken

instance AWSRequest ListDatabases where
        type Rs ListDatabases = ListDatabasesResponse
        request = postJSON athena
        response
          = receiveJSON
              (\ s h x ->
                 ListDatabasesResponse' <$>
                   (x .?> "DatabaseList" .!@ mempty) <*>
                     (x .?> "NextToken")
                     <*> (pure (fromEnum s)))

instance Hashable ListDatabases where

instance NFData ListDatabases where

instance ToHeaders ListDatabases where
        toHeaders
          = const
              (mconcat
                 ["X-Amz-Target" =#
                    ("AmazonAthena.ListDatabases" :: ByteString),
                  "Content-Type" =#
                    ("application/x-amz-json-1.1" :: ByteString)])

instance ToJSON ListDatabases where
        toJSON ListDatabases'{..}
          = object
              (catMaybes
                 [("NextToken" .=) <$> _ldNextToken,
                  ("MaxResults" .=) <$> _ldMaxResults,
                  Just ("CatalogName" .= _ldCatalogName)])

instance ToPath ListDatabases where
        toPath = const "/"

instance ToQuery ListDatabases where
        toQuery = const mempty

-- | /See:/ 'listDatabasesResponse' smart constructor.
data ListDatabasesResponse = ListDatabasesResponse'{_ldrsDatabaseList
                                                    :: !(Maybe [Database]),
                                                    _ldrsNextToken ::
                                                    !(Maybe Text),
                                                    _ldrsResponseStatus :: !Int}
                               deriving (Eq, Read, Show, Data, Typeable,
                                         Generic)

-- | Creates a value of 'ListDatabasesResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'ldrsDatabaseList' - A list of databases from a data catalog.
--
-- * 'ldrsNextToken' - A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.
--
-- * 'ldrsResponseStatus' - -- | The response status code.
listDatabasesResponse
    :: Int -- ^ 'ldrsResponseStatus'
    -> ListDatabasesResponse
listDatabasesResponse pResponseStatus_
  = ListDatabasesResponse'{_ldrsDatabaseList = Nothing,
                           _ldrsNextToken = Nothing,
                           _ldrsResponseStatus = pResponseStatus_}

-- | A list of databases from a data catalog.
ldrsDatabaseList :: Lens' ListDatabasesResponse [Database]
ldrsDatabaseList = lens _ldrsDatabaseList (\ s a -> s{_ldrsDatabaseList = a}) . _Default . _Coerce

-- | A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.
ldrsNextToken :: Lens' ListDatabasesResponse (Maybe Text)
ldrsNextToken = lens _ldrsNextToken (\ s a -> s{_ldrsNextToken = a})

-- | -- | The response status code.
ldrsResponseStatus :: Lens' ListDatabasesResponse Int
ldrsResponseStatus = lens _ldrsResponseStatus (\ s a -> s{_ldrsResponseStatus = a})

instance NFData ListDatabasesResponse where
