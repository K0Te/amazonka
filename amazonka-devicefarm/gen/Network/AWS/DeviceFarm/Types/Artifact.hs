{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.DeviceFarm.Types.Artifact
-- Copyright   : (c) 2013-2018 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
module Network.AWS.DeviceFarm.Types.Artifact where

import Network.AWS.DeviceFarm.Types.ArtifactType
import Network.AWS.Lens
import Network.AWS.Prelude

-- | Represents the output of a test. Examples of artifacts include logs and screenshots.
--
--
--
-- /See:/ 'artifact' smart constructor.
data Artifact = Artifact'{_aArn :: !(Maybe Text),
                          _aUrl :: !(Maybe Text), _aExtension :: !(Maybe Text),
                          _aName :: !(Maybe Text),
                          _aType :: !(Maybe ArtifactType)}
                  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'Artifact' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'aArn' - The artifact's ARN.
--
-- * 'aUrl' - The presigned Amazon S3 URL that can be used with a GET request to download the artifact's file.
--
-- * 'aExtension' - The artifact's file extension.
--
-- * 'aName' - The artifact's name.
--
-- * 'aType' - The artifact's type. Allowed values include the following:     * UNKNOWN     * SCREENSHOT     * DEVICE_LOG     * MESSAGE_LOG     * VIDEO_LOG     * RESULT_LOG     * SERVICE_LOG     * WEBKIT_LOG     * INSTRUMENTATION_OUTPUT     * EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.     * CALABASH_JSON_OUTPUT     * CALABASH_PRETTY_OUTPUT     * CALABASH_STANDARD_OUTPUT     * CALABASH_JAVA_XML_OUTPUT     * AUTOMATION_OUTPUT     * APPIUM_SERVER_OUTPUT     * APPIUM_JAVA_OUTPUT     * APPIUM_JAVA_XML_OUTPUT     * APPIUM_PYTHON_OUTPUT     * APPIUM_PYTHON_XML_OUTPUT     * EXPLORER_EVENT_LOG     * EXPLORER_SUMMARY_LOG     * APPLICATION_CRASH_REPORT     * XCTEST_LOG     * VIDEO     * CUSTOMER_ARTIFACT     * CUSTOMER_ARTIFACT_LOG     * TESTSPEC_OUTPUT
artifact
    :: Artifact
artifact
  = Artifact'{_aArn = Nothing, _aUrl = Nothing,
              _aExtension = Nothing, _aName = Nothing,
              _aType = Nothing}

-- | The artifact's ARN.
aArn :: Lens' Artifact (Maybe Text)
aArn = lens _aArn (\ s a -> s{_aArn = a})

-- | The presigned Amazon S3 URL that can be used with a GET request to download the artifact's file.
aUrl :: Lens' Artifact (Maybe Text)
aUrl = lens _aUrl (\ s a -> s{_aUrl = a})

-- | The artifact's file extension.
aExtension :: Lens' Artifact (Maybe Text)
aExtension = lens _aExtension (\ s a -> s{_aExtension = a})

-- | The artifact's name.
aName :: Lens' Artifact (Maybe Text)
aName = lens _aName (\ s a -> s{_aName = a})

-- | The artifact's type. Allowed values include the following:     * UNKNOWN     * SCREENSHOT     * DEVICE_LOG     * MESSAGE_LOG     * VIDEO_LOG     * RESULT_LOG     * SERVICE_LOG     * WEBKIT_LOG     * INSTRUMENTATION_OUTPUT     * EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.     * CALABASH_JSON_OUTPUT     * CALABASH_PRETTY_OUTPUT     * CALABASH_STANDARD_OUTPUT     * CALABASH_JAVA_XML_OUTPUT     * AUTOMATION_OUTPUT     * APPIUM_SERVER_OUTPUT     * APPIUM_JAVA_OUTPUT     * APPIUM_JAVA_XML_OUTPUT     * APPIUM_PYTHON_OUTPUT     * APPIUM_PYTHON_XML_OUTPUT     * EXPLORER_EVENT_LOG     * EXPLORER_SUMMARY_LOG     * APPLICATION_CRASH_REPORT     * XCTEST_LOG     * VIDEO     * CUSTOMER_ARTIFACT     * CUSTOMER_ARTIFACT_LOG     * TESTSPEC_OUTPUT
aType :: Lens' Artifact (Maybe ArtifactType)
aType = lens _aType (\ s a -> s{_aType = a})

instance FromJSON Artifact where
        parseJSON
          = withObject "Artifact"
              (\ x ->
                 Artifact' <$>
                   (x .:? "arn") <*> (x .:? "url") <*>
                     (x .:? "extension")
                     <*> (x .:? "name")
                     <*> (x .:? "type"))

instance Hashable Artifact where

instance NFData Artifact where
